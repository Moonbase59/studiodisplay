/* minifyOnSave, minifierOptions: "charset = utf-8" */

/*
studiodisplay.css

CSS3 for StudioDisplay web page (index.html).

Copyright © 2018 Matthias C. Hormann (@Moonbase59, mhormann@gmx.de)
Maintained at: https://github.com/Moonbase59/studiodisplay

This file is part of StudioDisplay.

StudioDisplay is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

StudioDisplay is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with StudioDisplay.  If not, see <http://www.gnu.org/licenses/>.

---

Diese Datei ist Teil von StudioDisplay.

StudioDisplay ist Freie Software: Sie können es unter den Bedingungen
der GNU General Public License, wie von der Free Software Foundation,
Version 3 der Lizenz oder (nach Ihrer Wahl) jeder neueren
veröffentlichten Version, weiter verteilen und/oder modifizieren.

StudioDisplay wird in der Hoffnung, dass es nützlich sein wird, aber
OHNE JEDE GEWÄHRLEISTUNG, bereitgestellt; sogar ohne die implizite
Gewährleistung der MARKTFÄHIGKEIT oder EIGNUNG FÜR EINEN BESTIMMTEN ZWECK.
Siehe die GNU General Public License für weitere Details.

Sie sollten eine Kopie der GNU General Public License zusammen mit diesem
Programm erhalten haben. Wenn nicht, siehe <http://www.gnu.org/licenses/>.
*/

* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}
body {
  /* Text color variables are the same as set by studiodisplay.js */
  --dark-text-color: rgba(0, 0, 0, 0.75);
  --bright-text-color: rgba(255, 255, 255, 0.75);
  font-family: 'Titillium Web', sans-serif;
  /* must be readable on badly-adjusted screens, use semi-bold */
  font-weight: 600;
  font-size: 2.0vmin;
  /* line-height: 2.2rem; */
  line-height: 1.45;
}
h1, h2, h3, h4, h5, h6 {
  line-height: 1.2;
  font-weight: 700; /* bold */
}
small {
  font-weight: 600; /* bold */
  font-size: 75%;
}
table, tr, td {
  font-size: 100%;
  font-weight: 600;
  padding-right: 1em;
}
/* large weather icon */
.large-symbol {
  font-size: 200%;
}
.xlarge-symbol {
  font-size: 300%;
}
.large-text {
  font-size: 145%;
}

.grid {
  display: grid;
  width: 100vw;
  height: 100vh;
  padding: 2vmin;
  grid-template-columns: 1fr 1fr 1fr 1fr;
  grid-template-rows: 1fr 7fr 1fr 1fr;
  grid-gap: 2vmin;
}

.box {
  border: 1px solid rgba(0,0,0,0.15);
  border-radius: 1vmin;
  background-color: rgba(255,255,255,0.1);
  padding: 1vmin;
  overflow: hidden;
}

.weather-box {
  background-color: rgba(255,255,255,0);
  border-top: 1px solid rgba(0,0,0,0.1);
  border-bottom: 1px solid rgba(0,0,0,0.1);
  border-left: 0;
  border-right: 0;
  border-radius: 0;
  padding: 1vmin;
  overflow: hidden;
}

.v-pad {
  padding-top: 0.5em;
}

.v-center {
  display: flex;
  align-items: center;
  padding-top: 0.5em;
  padding-bottom: 0.5em;
}

.title {
  grid-row: 1;
  grid-column: 1 / 5;
  /* text-align: center; */
  display: flex;
  align-items: center;
  justify-content: center;
}

.clock {
  grid-row: 2;
  grid-column: 1 / 3;
}

.clock div {
  display: block;
  text-align: center;
  vertical-align: middle;
}

#canvas {
  width: 100%;
  height: 80%;
}

.weather {
  grid-row: 2;
  grid-column: 3 / 5;
  display: grid;
  padding: 0;
  grid-template-columns: 18fr 10fr 72fr;
  grid-template-rows: 1fr 3fr 1fr 1fr 1fr 1fr;
  grid-gap: 0;
}

.weather-title {
  grid-column: 1 / 4;
}

.weather-current {
  grid-column: 1 / 3;
}

.radio {
  grid-row: 3;
  grid-column: 1 / 3;
  vertical-align: middle;
}

.kodi {
  grid-row: 3;
  grid-column: 3 / 5;
  display: grid;
  grid-template-columns: 8fr 92fr;
  padding: 0;
}

.kodi-state {
  grid-column: 1 / 2;
  justify-content: center;
}

.kodi-info {
  grid-column: 2 / 3;
  border-left: 1px solid rgba(0,0,0,0.15);
  overflow: hidden;
}

.kodi-info-content {
  z-index: 10;
  position: relative;
  padding: 1vmin 1vmin 0 1vmin;
  /* max-width: 100px; */
}

#radio\/status\/genre::before {
  content: ' (';
}

#radio\/status\/genre::after {
  content: ')';
}

#radio\/status\/genre:empty {
  display: none;
}

#kodi\/title\/type::after {
  content: ': ';
}
#kodi\/title\/type:empty {
  display: none;
}

/* Truncate overflowing text */
.truncate {
  min-width: 0;
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}

.kodi-info-progress {
  z-index: 9;
  padding: 0;
  width: 0;
  height: 0;
  border-radius: 0 1vmin 1vmin 0;
  position: absolute;
  background-color: hsla(120, 25%, 50%, 0.5);
}

/* colors for the UV Index */
.uv-color {
  font-weight: bold;
  padding: 0 0.33em 0 0.33em;
  border-radius: 0.5em;
}
.uv-color-purple {
  background-color: hsla(300, 90%, 50%, 0.75); /* fuchsia */
  color: var(--bright-text-color);
}
.uv-color-red {
  background-color: hsla(0, 90%, 50%, 0.75); /* red */
  color: var(--bright-text-color);
}
.uv-color-orange {
  background-color: hsla(30, 90%, 50%, 0.75); /* orange */
  color: var(--bright-text-color);
}
.uv-color-yellow {
  background-color: hsla(60, 90%, 50%, 0.75); /* yellow */
  color: var(--dark-text-color);
}
.uv-color-green {
  background-color: hsla(120, 90%, 50%, 0.75); /* green */
  color: var(--dark-text-color);
}
.uv-color-none {
  font-weight: inherit;
  padding: 0;
  border-radius: 0;
}


/* Common properties for the indicators */
.i {
  grid-row: 4;
  text-align: center;
  font-weight: bold;
}
.i > * {
  opacity: 0.25;
}
.i.on > * {
  opacity: 1;
}
.i.blink > * {
  opacity: 1;
}
.i.flash > * {
  opacity: 1;
}

/* The green READY indicator and its states */
.i-ready {
  --on-color: hsla(120, 90%, 50%, 0.9); /* green */
  --off-color: hsla(120, 25%, 50%, 0.5);
  background-color: var(--off-color);
}
.i-ready.on {
  background-color: var(--on-color);
}
.i-ready.blink {
  animation: blink 2s infinite;
}
.i-ready.flash {
  animation: flash 2s infinite;
}

/* The yellow STREAMING indicator and its states */
.i-streaming {
  --on-color: hsla(60, 90%, 50%, 0.9); /* yellow */
  --off-color: hsla(60, 25%, 50%, 0.5);
  background-color: var(--off-color);
}
.i-streaming.on {
  background-color: var(--on-color);
}
.i-streaming.blink {
  animation: blink 2s infinite;
}
.i-streaming.flash {
  animation: flash 2s infinite;
}

/* The red ON AIR indicator and its states */
.i-onair {
  --on-color: hsla(0, 90%, 50%, 0.9); /* red */
  --off-color: hsla(0, 25%, 50%, 0.5);
  background-color: var(--off-color);
}
.i-onair.on {
  background-color: var(--on-color);
}
.i-onair.blink {
  animation: blink 2s infinite;
}
.i-onair.flash {
  animation: flash 2s infinite;
}

/* The blue CALLER indicator and its states */
.i-caller {
  --on-color: hsla(240, 90%, 50%, 0.9); /* red */
  --off-color: hsla(240, 25%, 50%, 0.5);
  background-color: var(--off-color);
}
.i-caller.on {
  background-color: var(--on-color);
}
.i-caller.blink {
  animation: blink 2s infinite;
}
.i-caller.flash {
  animation: flash 2s infinite;
}

/* The animations for the indicators above */
@keyframes blink {
  0%   { background-color: var(--off-color); }
  50%  { background-color: var(--on-color); }
  100% { background-color: var(--off-color); }
}

@keyframes flash {
  0%   { background-color: var(--off-color); }
  15%  { background-color: var(--on-color); }
  30%  { background-color: var(--off-color); }
  45%  { background-color: var(--on-color); }
  60%  { background-color: var(--off-color); }
}

html {
  height: 100%; /* in case image is smaller than screen */
  /*overflow: hidden;*/ /* avoid scrollbars */

  /* background-image transition only works on Chrome 18+ and Webkit from 2012 onwards */
  transition: background-image 1s ease-in-out;

  -webkit-transition: color 1s ease;
  -moz-transition: color 1s ease;
  -o-transition: color 1s ease;
  transition: color 1s ease;
  -webkit-transition: background 1s ease;
  -moz-transition: background 1s ease;
  -o-transition: background 1s ease;
  transition: background 1s ease;

  /* background that covers the entire browser window at all times */
  background-image: none; /* or url('images/xxx.jpg'), set by function setLighting() */
  background-repeat: no-repeat;
  background-attachment: fixed;
  background-size: cover;
  background-position: center center;
  background-color: #ffffff;
  color: var(--dark-text-color);
}
